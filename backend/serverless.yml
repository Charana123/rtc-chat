service: rtc-chat
# Used with dashboard.serverless.com
enterpriseDisabled: true

# Serverless version
frameworkVersion: '>=1.28.0 <2.0.0'

# Provider
provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - dynamodb:*
      Resource:
       - Fn::GetAtt: [RTCChatDDB, Arn]
       - Fn::Join:
         - "/"
         -
           - Fn::GetAtt: [RTCChatDDB, Arn]
           - "index/*"
    - Effect: "Allow"
      Action:
       - sns:*
      Resource:
       - Ref: RTCChatSNS

# Serverless deploy
package:
  exclude:
    - ./**
  include:
    - ./bin/**

# Lambda functions
functions:
  manageConnection:
    handler: bin/manage-connection
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
  createChannel:
    handler: bin/create-channel
    events:
      - websocket:
          route: createChannel
  listChannels:
    handler: bin/list-channels
    events:
      - websocket:
          route: listChannels
  subscribeChannel:
    handler: bin/subscribe-channel
    events:
      - websocket:
          route: subscribeChannel
  sendMessage:
    handler: bin/send-message
    events:
      - websocket:
          route: sendMessage
  broadcastMessage:
    handler: bin/broadcast-message
    events:
      - sns:
          arn: !Ref RTCChatSNS
          topicName: MessageTopic

# Other serverless resources (e.g. S3, DynamoDB)
resources:
  Resources:
      RTCChatSNS:
        Type: AWS::SNS::Topic
        Properties:
          TopicName: MessageTopic
      RTCChatDDB:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: RTCChat
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
          AttributeDefinitions:
            - AttributeName: pk
              AttributeType: S
            - AttributeName: sk
              AttributeType: S
          KeySchema:
            - AttributeName: pk
              KeyType: HASH
            - AttributeName: sk
              KeyType: RANGE
          GlobalSecondaryIndexes:
            - IndexName: reverseGSI
              KeySchema:
              - AttributeName: sk
                KeyType: HASH
              - AttributeName: pk
                KeyType: RANGE
              Projection:
                ProjectionType: KEYS_ONLY
              ProvisionedThroughput:
                ReadCapacityUnits: 5
                WriteCapacityUnits: 5

# pk -> sk (primary key)
# supports
#   Multi Item Operations - getting all users on a channel
#   Single Item Operations - adding/removing user from channel

# sk -> pk (reverse GSI)
# supports
#   Multi Item Operations - getting all channels for a user, getting all channels
#   SIs don't support single item operations

# Table
# pk        sk          
# channel1  info       
#           connection1
#           connection2
# channel2  info       
#           connection1

# reverse GSI
# sk          pk
# connection1 channel1
#             channel2
# connection2 channel1
# info        channel1 
#             channel2
